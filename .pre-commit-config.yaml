# To use:
#
#     pre-commit run -a
#
# Or:
#
#     pre-commit install  # (runs every time you commit in git)
#
# To update this file:
#
#     pre-commit autoupdate
#
# See https://github.com/pre-commit/pre-commit
#

repos:
  # Standard hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-added-large-files
      - id: check-docstring-first
      - id: check-json
      - id: check-merge-conflict
      - id: check-toml
      - id: check-xml
      - id: check-yaml
      - id: end-of-file-fixer
      - id: forbid-new-submodules
      - id: mixed-line-ending
      - id: name-tests-test
      - id: no-commit-to-branch
        stages:
          - push
      - id: pretty-format-json
        args:
          - --autofix
          - --no-sort-keys
      - id: requirements-txt-fixer
        args:
          - constraints/3.8.txt
          - constraints/3.9.txt
          - constraints/3.10.txt
          - constraints/3.11.txt
          - requirements.txt
          - requirements/docs.txt
          - requirements/lint.txt
          - requirements/package.txt
          - requirements/test.txt
      - id: trailing-whitespace

  - repo: local
    hooks:
      # Ruff, the Python auto-correcting linter written in Rust, Ruff can be used to
      # replace Flake8 (plus dozens of plugins), isort, pydocstyle, yesqa, eradicate,
      # pyupgrade, and autoflake
      - id: ruff
        entry: python -m ruff --force-exclude --fix --show-fixes
        language: system
        name: ruff
        types:
          - python

      # Black formatter
      - id: black
        entry: python -m black
        language: system
        name: black
        types:
          - python

      # Isort fixer
      - id: isort
        entry: python -m isort --filter-files
        language: system
        name: isort
        require_serial: true
        types_or:
          - cython
          - pyi
          - python

      # Mypy linter
      - id: mypy
        entry: make mypy
        language: system
        name: mypy
        pass_filenames: false
        require_serial: true
        types:
          - python

      # Toml sort
      - id: toml-sort
        entry: toml-sort
        language: system
        name: toml-sort
        types:
          - toml

      # Exclude copier intermediate files
      - id: forbidden-files
        entry: found Copier update rejection files; review them and remove them
        files: \.rej$
        language: fail
        name: forbidden files
